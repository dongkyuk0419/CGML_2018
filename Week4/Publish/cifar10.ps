%!PS-Adobe-3.0
%%Title: week4_cifar_10.py
%%For: dongkyu kim
%%Creator: a2ps version 4.14
%%CreationDate: Wed Oct  3 21:33:28 2018
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 792 def
/sw 612 def
/llx 24 def
/urx 588 def
/ury 768 def
/lly 24 def
/#copies 1 def
/th 0.000000 def
/fnfs 11 def
/bfs 11.547912 def
/cw 6.928747 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   735.601972 th add
def
/pmw 0 def
/pmh 0 def
/v 0 def
/x [
  0
] def
/y [
  pmh ph add 0 mul ph add
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 0 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs  sub store
x0 y0 moveto
(# DongKyu Kim) c n
(# ECE 471 CGML Assignment 4) N
(# CIFAR-10) N
(# Professor Curro) N
() p n
(# library imports) c n
(import) K
( numpy as np) p n
(from) K
( tqdm ) p
(import) K
( tqdm) p n
(import) K
( keras) p n
(import) K
( tensorflow as tf) p n
(from) K
( keras ) p
(import) K
( optimizers, regularizers) p n
(from) K
( keras.datasets ) p
(import) K
( cifar10) p n
(from) K
( keras.models ) p
(import) K
( Model) p n
(from) K
( keras.layers ) p
(import) K
( Dense, Dropout, Flatten, Conv2D, MaxPooling2D) p n
(from) K
( keras.layers ) p
(import) K
( BatchNormalization, Activation, Input) p n
(from) K
( keras.callbacks ) p
(import) K
( LearningRateScheduler) p n
() N
(# Parameters) c n
(r = 0.9 ) p
(# Ratio of training data to \(training + validation\)) c n
(batch_size = 128) p n
(epochs = 200) N
(numclass = 10) N
(learning_rate = 0.005) N
() N
(# Useful functions) c n
(def) K
( one_hot_encoding\(data,numclass\):) p n
(    targets = np.array\(data\).reshape\(-1\)) N
(    ) S
(return) K
( np.eye\(numclass\)[targets]) p n
() N
(def) K
( lr_adaptive\(self,epoch\):) p n
(    lr = learning_rate) N
(    ) S
(if) K
( epoch > 20:) p n
(        lr = learning_rate/10) N
(    ) S
(elif) K
( epoch > 40:) p n
(        lr = learning_rate/20) N
(    ) S
(return) K
( lr) p n
() N
(# Data Generation) c n
(class) K
( Data\(object\):) p n
(    ) S
(def) K
( __init__\(self,r,numclass\):) p n
(        \(xtemp,ytemp\),\(self.X_test,self.Y_test\) = cifar10.load_data\(\)) N
(        mask = np.full\(xtemp.shape[0],True\)) N
(        mask[np.random.choice\(xtemp.shape[0],) N
(            int\(xtemp.shape[0]*\(1-r\)\),replace=False\)] = False) N
(        self.numclass = numclass) N
(        self.X_train = xtemp[mask].astype\(') S
(float32) str
('\)) p n
(        self.Y_train = ytemp[mask]) N
(        self.X_val = xtemp[~mask].astype\(') S
(float32) str
('\)) p n
(        self.Y_val = ytemp[~mask]) N
(        self.X_test = self.X_test.astype\(') S
(float32) str
('\)) p n
(        self.Y_test = self.Y_test) N
(        self.X_train = self.normalize\(self.X_train\)) N
(        self.X_val = self.normalize\(self.X_val\)) N
(        self.X_test = self.normalize\(self.X_test\)) N
(        self.Y_train = one_hot_encoding\(self.Y_train,self.numclass\)) N
(        self.Y_val = one_hot_encoding\(self.Y_val,self.numclass\)) N
(        self.Y_test = one_hot_encoding\(self.Y_test,self.numclass\)) N
() N
(    ) S
(def) K
( normalize\(self,X\):) p n
(        X /= 255) N
(        ) S
(# These values are from) c n
(        ) p
(# https://github.com/kuangliu/pytorch-cifar/issues/19) c n
(        mu = [0.4914,0.4822,0.4465]) p n
border
grestore
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 2
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 0 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs  sub store
x0 y0 moveto
(        std = [0.2023,0.1994,0.2010]) p n
(        ) S
(for) K
( i ) p
(in) K
( range\(0,2\):) p n
(            X[:,:,:,i] = \(X[:,:,:,i]-mu[i]\)/std[i]) N
(        ) S
(return) K
( X) p n
() N
(# Model) c n
(class) K
( My_Model\(object\):) p n
(    ) S
(def) K
( __init__\(self,data,batch_size,epochs\):) p n
(        self.data = data) N
(        self.batch_size = batch_size) N
(        self.epochs = epochs) N
() N
(    ) S
(def) K
( convconv\(self,filters,kernel_size,strides\):) p n
(        ) S
(return) K
( Conv2D\(filters,kernel_size,strides =strides,) p n
(            padding=') S
(same) str
(',activation=') p
(relu) str
('\)) p n
() N
(    ) S
(#The below block is from [1], Second branch is motivated by [3]) c n
(    ) p
(#The below function is ultimately unused,) c n
(    ) p
(#however I left this here for future usage.) c n
(    ) p
(def) K
( residual_block\(self,input,filter\):) p n
(        x = BatchNormalization\(\)\(input\)) N
(        x = Activation\(') S
(relu) str
('\)\(x\)) p n
(        x = self.convconv\(filter,[3,3],1\)\(x\)) N
(        x = BatchNormalization\(\)\(input\)) N
(        x = Activation\(') S
(relu) str
('\)\(x\)) p n
(        x = self.convconv\(filter,[3,3],1\)\(x\)) N
() N
(        y = BatchNormalization\(\)\(input\)) N
(        y = Activation\(') S
(relu) str
('\)\(y\)) p n
(        y = self.convconv\(filter,[3,3],1\)\(y\)) N
(        y = BatchNormalization\(\)\(y\)) N
(        y = Activation\(') S
(relu) str
('\)\(y\)) p n
(        y = self.convconv\(filter,[3,3],1\)\(y\)) N
(        ) S
(return) K
( keras.layers.add\([input,x,y]\)) p n
() N
(    ) S
(#This is a combination of residual block without the identity connection.) c n
(    ) p
(def) K
( all_conv_block\(self,filters,dropout,input\):) p n
(        x = self.convconv\(filters,[3,3],1\)\(input\)) N
(        x = BatchNormalization\(\)\(x\)) N
(        x = self.convconv\(filters,[3,3],1\)\(x\)) N
(        x = BatchNormalization\(\)\(x\)) N
(        x = MaxPooling2D\(2,strides = 2\)\(x\)) N
(        x = Dropout\(dropout\)\(x\)) N
(        ) S
(return) K
( x) p n
() N
(    ) S
(def) K
( build_model\(self\):) p n
(        input = Input\(shape = self.data.X_train.shape[1:]\)) N
(        x = self.all_conv_block\(32,0.25,input\)        ) N
(        x = self.all_conv_block\(64,0.35,x\)) N
(        x = self.all_conv_block\(128,0.45,x\)) N
(        x = self.all_conv_block\(256,0.35,x\)) N
(        x = Flatten\(\)\(x\)) N
(        x = Dense\(1024,activation = ') S
(relu) str
('\)\(x\)) p n
(        y = Dense\(self.data.numclass,activation=') S
(softmax) str
('\)\(x\)) p n
(        self.model = Model\(inputs = input, outputs = y\)) N
() N
(    ) S
(def) K
( train\(self\):) p n
(        self.optim = optimizers.Adam\(learning_rate\)) N
(        self.model.compile\(self.optim,') S
(categorical_crossentropy) str
(',[') p
(accuracy) str
(']\)) p n
(        self.datagen = keras.preprocessing.image.ImageDataGenerator\() N
(            horizontal_flip = True,fill_mode = ') S
(constant) str
(',) p n
(            width_shift_range = 4, height_shift_range = 4) N
(            \)) N
border
grestore
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 3
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 0 add translate
/v 0 store
/x0 x v get 4.850123 add sx cw mul add store
/y0 y v get bfs  sub store
x0 y0 moveto
(        self.datagen.fit\(self.data.X_train\)) p n
(        self.model.fit_generator\(self.datagen.flow\(self.data.X_train,) N
(            self.data.Y_train,batch_size=self.batch_size\),) N
(            steps_per_epoch=len\(self.data.X_train\)/self.batch_size,) N
(            epochs=self.epochs,) N
(            validation_data=\(self.data.X_val,self.data.Y_val\),) N
(            callbacks=[LearningRateScheduler\(lr_adaptive\)],verbose=2\)) N
() N
(print) K
(\(') p
(This is my cifar_10 case) str
('\)) p n
(data = Data\(r,numclass\)) N
(My_Model = My_Model\(data,batch_size,epochs\)) N
(My_Model.build_model\(\)) N
(My_Model.train\(\)) N
(scores = My_Model.model.evaluate\(data.X_test,data.Y_test,verbose=2\)) N
(print) K
(\(') p
(Test loss: ) str
(', scores[0]\)) p n
(print) K
(\(') p
(Test accuracy:) str
(',scores[1]\)) p n
() N
(# The state of the art cifar10 is 98.52% from Wikipedia achieved by) c n
(# AutoAugment: Learning Augmentation Policies from Data) N
(# I started with my MNIST model, it didn't work well. Then I experimented with) N
(# a deeper version of the MNIST model, but it just achieved 50% top-1 accuracy.) N
(# I moved into residual neural network based on [1], and [2]. After 32 epochs, ) N
(# it converges at validation accuracy of 0.6479, and train set accuracy of) N
(# 0.9967, with best validation accuracy of 0.6513. This model overfits, so I) N
(# added a simple data augmentation scheme. With this augmentation method, I) N
(# reach a validation accuracy of 0.6821, which is slightly better, but not that) N
(# good. Then I did the data normalization off of a already known values because) N
(# I didn't want to waste computational time, and result improved a lot to) N
(# 0.8042 validation error.) N
(# I tried elu, rotation_range in data augmentation, added another branch in) N
(# residual network played around with learning rate, but all of these methods ) N
(# did not really help. Then I discussed with classmates and heard that simple) N
(# convolutional neural network might work better. This made sense to me because) N
(# even in the residual network paper, they mention for the deep versions of the) N
(# model, they started with a simple conv net layers, and then add the residual) N
(# network, and all the state of the art papers ran the model for 6 weeks, so) N
(# maybe with my device and time, residual network wasn't effective. So I) N
(# changed back to a deep 12 layer network with conv-net blocks, with adaptive) N
(# learning rate, I achieved validation accuracy of 0.9120 and test accuracy of) N
(# 0.9029.) N
() p n
() N
(# [1] Identity Mappings in Deep Residual Networks) c n
(#   https://arxiv.org/pdf/1603.05027.pdf) N
(# [2] Deep Residual Learning for Image Recognition) N
(#   https://arxiv.org/pdf/1512.03385.pdf ) N
(# [3] Shake-Shake regularization) N
(#   https://arxiv.org/pdf/1705.07485.pdf) N
border
grestore
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
